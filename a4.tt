composer toInt
  <INT>
end toInt

templates valid
  def pw: $;
  def digits: ['$pw;'... -> toInt ];
  def diffs: $digits -> \[i](when <?($i <2..>)> do $ - $digits($i - 1) !\);
  $diffs -> \(when <[<=0>]> do $ !\) -> \(when <~[<..~0>]> do $ !\) -> $pw !
end valid

//part 1
def validPasswords: [ 284639..748759 -> valid ];
$validPasswords -> $::length -> !OUT::write

'
' -> !OUT::write

// part 2
templates runLengths
  def in: $;
  def breaks: [ $ -> \[i](when <?($i <=1>)> do 1 ! when <~?($in($i) <=$in($i - 1)>)> do $i !\)..., $in::length + 1];
  $breaks  -> \[i](when <?($i <2..>)> do $ - $breaks($i - 1) !\) !
end runLengths

[ $validPasswords... -> \( def pw: $;
  [ '$pw;'... ] -> runLengths -> \(when <[<=2>]> do $pw !\) !\) ] -> $::length -> !OUT::write

