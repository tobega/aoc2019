include 'lib/list'
include 'lib/hash'

data object <'.+'>, around <[]|object>

composer orbit
  { around: <~'\)'>, (<'\)'>) orbitter: <object´'.*'> }
end orbit

def orbitMap: [ $IN::lines -> orbit ] -> hash/Map&{key: :(orbitter:), value: :(around:)};

templates resolveOrbits
  def orbitter: $;
  $ -> orbitMap::get -> #
  <~[]>
      def orbits: [ $ , $ -> resolveOrbits ... ];
      $orbits -> { orbitter: $orbitter, around: $ } -> orbitMap::put -> !VOID
      $orbits !
  <> $ !
end resolveOrbits

[ $orbitMap::entries -> $.orbitter -> resolveOrbits -> $::length ] -> list/sum -> !OUT::write
'
' -> !OUT::write

templates findPath
  def fromOrbits: $(1) -> orbitMap::get;
  def toOrbits: $(2) -> orbitMap::get;
  0 -> #

  <?($fromOrbits(last+$) <=$toOrbits(last+$)>)>
    $ - 1 -> #

  <>
    [ $fromOrbits(first..last+$+1)..., $toOrbits(last+$..first:-1)... ] !
end findPath

[object´'YOU', object´'SAN'] -> findPath -> $::length - 1 -> !OUT::write
